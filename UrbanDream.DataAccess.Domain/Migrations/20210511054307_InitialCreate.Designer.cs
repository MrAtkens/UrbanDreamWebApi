// <auto-generated />
using System;
using BazarJok.DataAccess.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BazarJok.DataAccess.Domain.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210511054307_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BazarJok.DataAccess.Models.Pins.PinsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CountOfWatchings")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<double>("Raiting")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PinsEntity");

                    b.HasDiscriminator<string>("Discriminator").HasValue("PinsEntity");
                });

            modelBuilder.Entity("BazarJok.DataAccess.Models.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcceptedModeratorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrigadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("WorkStartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrigadeId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("BazarJok.DataAccess.Models.System.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("BazarJok.DataAccess.Models.System.ReportImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReportImages");
                });

            modelBuilder.Entity("BazarJok.DataAccess.Models.System.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("BazarJok.DataAccess.Models.Users.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AcceptedPinsCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ModeratedPinsCount")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique()
                        .HasFilter("[Login] IS NOT NULL");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61e8a6b6-53c0-4e55-9a55-6357b83f62b6"),
                            AcceptedPinsCount = 0,
                            CreationDate = new DateTime(2021, 5, 11, 11, 43, 6, 283, DateTimeKind.Local).AddTicks(1383),
                            Login = "Admin",
                            ModeratedPinsCount = 0,
                            PasswordHash = "$2a$11$u2woPH3HBxZpLSqAEw5WBulzJfZFpW/G2OlKvMxDUXARlJ0y5ALFa",
                            Role = (byte)5
                        });
                });

            modelBuilder.Entity("BazarJok.DataAccess.Models.Users.Brigade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrigadeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BrigadePinsCount")
                        .HasColumnType("int");

                    b.Property<string>("BrigadeWorkAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BrigadeWorkersCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Brigades");
                });

            modelBuilder.Entity("BazarJok.DataAccess.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ImagePinsEntity", b =>
                {
                    b.Property<Guid>("ImagesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PinsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ImagesId", "PinsId");

                    b.HasIndex("PinsId");

                    b.ToTable("ImagePinsEntity");
                });

            modelBuilder.Entity("PinsEntityTag", b =>
                {
                    b.Property<Guid>("PinsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PinsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("PinsEntityTag");
                });

            modelBuilder.Entity("ReportReportImage", b =>
                {
                    b.Property<Guid>("ImagesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReportsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ImagesId", "ReportsId");

                    b.HasIndex("ReportsId");

                    b.ToTable("ReportReportImage");
                });

            modelBuilder.Entity("BazarJok.DataAccess.Models.Pins.ProblemPin", b =>
                {
                    b.HasBaseType("BazarJok.DataAccess.Models.Pins.PinsEntity");

                    b.Property<string>("AcceptedModeratorAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AcceptedModeratorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrigadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModeratedModeratorAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModeratedModeratorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("State")
                        .HasColumnType("tinyint");

                    b.HasIndex("ReportId");

                    b.HasDiscriminator().HasValue("ProblemPin");
                });

            modelBuilder.Entity("BazarJok.DataAccess.Models.Report", b =>
                {
                    b.HasOne("BazarJok.DataAccess.Models.Users.Brigade", null)
                        .WithMany("Reports")
                        .HasForeignKey("BrigadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ImagePinsEntity", b =>
                {
                    b.HasOne("BazarJok.DataAccess.Models.System.Image", null)
                        .WithMany()
                        .HasForeignKey("ImagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazarJok.DataAccess.Models.Pins.PinsEntity", null)
                        .WithMany()
                        .HasForeignKey("PinsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PinsEntityTag", b =>
                {
                    b.HasOne("BazarJok.DataAccess.Models.Pins.PinsEntity", null)
                        .WithMany()
                        .HasForeignKey("PinsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazarJok.DataAccess.Models.System.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReportReportImage", b =>
                {
                    b.HasOne("BazarJok.DataAccess.Models.System.ReportImage", null)
                        .WithMany()
                        .HasForeignKey("ImagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazarJok.DataAccess.Models.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BazarJok.DataAccess.Models.Pins.ProblemPin", b =>
                {
                    b.HasOne("BazarJok.DataAccess.Models.Report", "Report")
                        .WithMany("Pins")
                        .HasForeignKey("ReportId");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("BazarJok.DataAccess.Models.Report", b =>
                {
                    b.Navigation("Pins");
                });

            modelBuilder.Entity("BazarJok.DataAccess.Models.Users.Brigade", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
